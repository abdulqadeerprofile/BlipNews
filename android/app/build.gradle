// Apply necessary plugins
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * React Native Android app configuration.
 * Customize the settings below based on your project needs.
 */
react {
    // Uncomment and modify these settings if customization is needed.

    // The root of your project, where "package.json" is located. Default is '..'
    // root = file("../")
    
    // The folder where the react-native NPM package is located. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    
    // The folder where the react-native Codegen package is located. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    
    // The cli.js file which is the React Native CLI entry point. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")
    
    // Uncomment and list your debuggable variants if you have custom flavors.
    // debuggableVariants = ["liteDebug", "prodDebug"]
    
    // Uncomment to specify a custom command for bundling. Default is 'bundle'.
    // bundleCommand = "ram-bundle"
    
    // Uncomment to specify the entry file for bundle generation. Default is 'index.android.js' or 'index.js'.
    // entryFile = file("../js/MyApplication.android.js")
    
    // Uncomment to add extra flags to the 'bundle' commands.
    // extraPackagerArgs = []
    
    // Uncomment to customize Hermes commands. By default, Hermes compiler uses "-O", "-output-source-map".
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Proguard settings for Release builds.
 * Enable Proguard to minify the Java bytecode for better performance and security.
 */
def enableProguardInReleaseBuilds = true

/**
 * JavaScriptCore (JSC) flavor settings.
 * For example, to use the international variant:
 * def jscFlavor = 'org.webkit:android-jsc-intl:+'
 * This variant includes ICU i18n library and is about 6MiB larger per architecture.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.blipnews"
    
    defaultConfig {
        applicationId "com.blipnews"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        
        release {
            // Sensitive information is stored in gradle.properties file for security.
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(project.MYAPP_UPLOAD_STORE_FILE)
                storePassword project.MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias project.MYAPP_UPLOAD_KEY_ALIAS
                keyPassword project.MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        
        release {
            // Ensure that you have generated your own keystore file for production builds.
            // Refer to: https://reactnative.dev/docs/signed-apk-android
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // React Native dependency, version managed by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    // Hermes or JSC based on the hermesEnabled flag
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Apply native modules gradle file from React Native community
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
